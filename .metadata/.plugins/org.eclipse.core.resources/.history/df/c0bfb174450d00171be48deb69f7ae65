package com.cloud.sso.oa.filter;
import java.io.IOException;
import java.net.URLEncoder;
import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.methods.PostMethod;

public class SSOClientFilter implements Filter {

    @Override
    public void destroy() {
    }

    @Override
    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws IOException, ServletException {
    	HttpServletRequest request = (HttpServletRequest) servletRequest;
        HttpServletResponse response = (HttpServletResponse) servletResponse;
        HttpSession session = request.getSession();
        String username = (String) session.getAttribute("username");
        String ticket = request.getParameter("ticket");
        String url = URLEncoder.encode(request.getRequestURL().toString(), "UTF-8");
        System.out.println("用户名1："+username);
        //判断用户是否已经登录oa系统
        if (null == username) { 		
        	//1.判断用户是否有认证凭据--ticket（认证中心生成）
            if (null != ticket && !"".equals(ticket)) {

                try {
                    PostMethod postMethod = new PostMethod("http://localhost:8081/sso-server/ticket");
                    //给url添加新的参数
                    postMethod.addParameter("ticket", ticket);
                    HttpClient httpClient = new HttpClient();
                	//通过httpClient调用SSO Server中的TicektServlet，验证ticket是否有效
                    httpClient.executeMethod(postMethod);
                    //将HTTP方法的响应正文（如果有）返回为String
                    username = postMethod.getResponseBodyAsString();
                    //释放此HTTP方法正在使用的连接
                    postMethod.releaseConnection();
                } catch (Exception e) {
                    e.printStackTrace();
                }
                
                //2.判断认证凭据是否有效
                if (null != username && !"".equals(username)) {
                	//session设置用户名，说明用户登录成功了
                    session.setAttribute("username", username);
                    filterChain.doFilter(request, response);
                } else {
                    response.sendRedirect("http://localhost:8081/sso-server/index.jsp?service=" + url);
                }
                
            } else {//第一次访问oa系统，需要到sso-server系统验证
                response.sendRedirect("http://localhost:8081/sso-server/index.jsp?service=" + url);
            }
            
        } else {
            filterChain.doFilter(request, response);
        }
    }

    @Override
    public void init(FilterConfig arg0) throws ServletException {
    }

}